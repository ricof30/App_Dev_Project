{"ast":null,"code":"import Chart from 'chart.js/auto';\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      chartData: {}\n    };\n  },\n  mounted() {\n    this.fetchChartData();\n  },\n  methods: {\n    fetchChartData() {\n      axios.get('chart') // Replace with your actual API endpoint\n      .then(response => {\n        this.chartData = response.data;\n        this.renderChart();\n      }).catch(error => {\n        console.error('Error fetching chart data:', error);\n      });\n    },\n    renderChart() {\n      const ctx = this.$refs.chart.getContext('2d');\n      new Chart(ctx, {\n        type: 'bar',\n        // Change the chart type as needed (e.g., line, pie, etc.)\n        data: {\n          labels: this.chartData.labels,\n          datasets: [{\n            label: 'Chart Data',\n            data: this.chartData.values,\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["Chart","axios","data","chartData","mounted","fetchChartData","methods","get","then","response","renderChart","catch","error","console","ctx","$refs","chart","getContext","type","labels","datasets","label","values","backgroundColor","borderColor","borderWidth","options","responsive","maintainAspectRatio"],"sources":["C:\\laragon\\www\\frontend\\src\\components\\admin\\chart.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <canvas ref=\"chart\"></canvas>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import Chart from 'chart.js/auto';\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        chartData: {},\r\n      };\r\n    },\r\n    mounted() {\r\n      this.fetchChartData();\r\n    },\r\n    methods: {\r\n      fetchChartData() {\r\n        axios.get('chart') // Replace with your actual API endpoint\r\n          .then(response => {\r\n            this.chartData = response.data;\r\n            this.renderChart();\r\n          })\r\n          .catch(error => {\r\n            console.error('Error fetching chart data:', error);\r\n          });\r\n      },\r\n      renderChart() {\r\n        const ctx = this.$refs.chart.getContext('2d');\r\n  \r\n        new Chart(ctx, {\r\n          type: 'bar', // Change the chart type as needed (e.g., line, pie, etc.)\r\n        data: {\r\n          labels: this.chartData.labels,\r\n          datasets: [{\r\n            label: 'Chart Data',\r\n            data: this.chartData.values,\r\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n            borderColor: 'rgba(75, 192, 192, 1)',\r\n            borderWidth: 1,\r\n          }],\r\n        },\r\n          options: {\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n          },\r\n        });\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Add your component-specific styles here */\r\n  </style>\r\n  "],"mappings":"AAOE,OAAOA,KAAI,MAAO,eAAe;AACjC,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,CAAC;IACd,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,cAAc,CAAC,CAAC;EACvB,CAAC;EACDC,OAAO,EAAE;IACPD,cAAcA,CAAA,EAAG;MACfJ,KAAK,CAACM,GAAG,CAAC,OAAO,EAAE;MAAA,CAChBC,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACN,SAAQ,GAAIM,QAAQ,CAACP,IAAI;QAC9B,IAAI,CAACQ,WAAW,CAAC,CAAC;MACpB,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD,CAAC,CAAC;IACN,CAAC;IACDF,WAAWA,CAAA,EAAG;MACZ,MAAMI,GAAE,GAAI,IAAI,CAACC,KAAK,CAACC,KAAK,CAACC,UAAU,CAAC,IAAI,CAAC;MAE7C,IAAIjB,KAAK,CAACc,GAAG,EAAE;QACbI,IAAI,EAAE,KAAK;QAAE;QACfhB,IAAI,EAAE;UACJiB,MAAM,EAAE,IAAI,CAAChB,SAAS,CAACgB,MAAM;UAC7BC,QAAQ,EAAE,CAAC;YACTC,KAAK,EAAE,YAAY;YACnBnB,IAAI,EAAE,IAAI,CAACC,SAAS,CAACmB,MAAM;YAC3BC,eAAe,EAAE,yBAAyB;YAC1CC,WAAW,EAAE,uBAAuB;YACpCC,WAAW,EAAE;UACf,CAAC;QACH,CAAC;QACCC,OAAO,EAAE;UACPC,UAAU,EAAE,IAAI;UAChBC,mBAAmB,EAAE;QACvB;MACF,CAAC,CAAC;IACJ;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}