{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container-scroller\"\n};\nconst _hoisted_2 = {\n  class: \"container-fluid page-body-wrapper\"\n};\nconst _hoisted_3 = {\n  class: \"main-panel\"\n};\nconst _hoisted_4 = {\n  class: \"content-wrapper pb-0\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Start Date:\", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"label\", null, \"End Date:\", -1 /* HOISTED */);\nconst _hoisted_7 = {\n  key: 0,\n  class: \"table table-bordered mt-3\"\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createCommentVNode(\" <th>Column 1</th>\\r\\n                            <th>Column 2</th> \"), /*#__PURE__*/_createCommentVNode(\" Add other column headers as needed \")])], -1 /* HOISTED */);\nconst _hoisted_9 = {\n  class: \"row\"\n};\nconst _hoisted_10 = {\n  class: \"col\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Header = _resolveComponent(\"Header\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_Header), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createCommentVNode(\" <div>\\r\\n                    <label>Date Range:</label>\\r\\n                    <input type=\\\"date\\\" v-model=\\\"startDate\\\" />\\r\\n                    <input type=\\\"date\\\" v-model=\\\"endDate\\\" />\\r\\n                    <button @click=\\\"exportData\\\">Export Data</button>\\r\\n                  </div> \"), _createElementVNode(\"div\", null, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.startDate = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.startDate]]), _hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.endDate = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.endDate]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.fetchData && $options.fetchData(...args))\n  }, \"Fetch Data\"), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.exportData && $options.exportData(...args))\n  }, \"Export Data\"), _createCommentVNode(\" Display the fetched data \"), $data.fetchedData ? (_openBlock(), _createElementBlock(\"table\", _hoisted_7, [_hoisted_8, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.fetchedData, (row, rowIndex) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: rowIndex\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(row, (cell, columnIndex) => {\n      return _openBlock(), _createElementBlock(\"td\", {\n        key: columnIndex\n      }, _toDisplayString(cell), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, _toDisplayString(_ctx.cell), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)])])])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createCommentVNode","_createElementBlock","_hoisted_1","_createVNode","_component_Header","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","type","$data","startDate","$event","_hoisted_6","endDate","onClick","_cache","args","$options","fetchData","exportData","fetchedData","_hoisted_7","_hoisted_8","_Fragment","_renderList","row","rowIndex","key","cell","columnIndex","_toDisplayString","_hoisted_9","_hoisted_10","_ctx"],"sources":["C:\\laragon\\www\\frontend\\src\\views\\user\\Generate.vue"],"sourcesContent":["<template>\r\n    <div class=\"container-scroller\">\r\n        <Header/>\r\n        <div class=\"container-fluid page-body-wrapper\">\r\n            <div class=\"main-panel\">\r\n              <div class=\"content-wrapper pb-0\">\r\n                <!-- <div>\r\n                    <label>Date Range:</label>\r\n                    <input type=\"date\" v-model=\"startDate\" />\r\n                    <input type=\"date\" v-model=\"endDate\" />\r\n                    <button @click=\"exportData\">Export Data</button>\r\n                  </div> -->\r\n                 \r\n                    <div>\r\n                      <label>Start Date:</label>\r\n                      <input type=\"date\" v-model=\"startDate\" />\r\n                  \r\n                      <label>End Date:</label>\r\n                      <input type=\"date\" v-model=\"endDate\" />\r\n                  \r\n                      <button @click=\"fetchData\">Fetch Data</button>\r\n                      <button @click=\"exportData\">Export Data</button>\r\n                  \r\n                      <!-- Display the fetched data -->\r\n                      <table v-if=\"fetchedData\" class=\"table table-bordered mt-3\">\r\n                        <thead>\r\n                          <tr>\r\n                            <!-- <th>Column 1</th>\r\n                            <th>Column 2</th> -->\r\n                            <!-- Add other column headers as needed -->\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          <tr v-for=\"(row, rowIndex) in fetchedData\" :key=\"rowIndex\">\r\n                            <td v-for=\"(cell, columnIndex) in row\" :key=\"columnIndex\">{{ cell }}</td>\r\n                            <div class=\"row\">\r\n                                <div class=\"col\">{{ cell }}</div>\r\n                            </div>\r\n                          </tr>\r\n                        </tbody>\r\n                      </table> \r\n                    </div>\r\n                  \r\n              </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n \r\n  </template>\r\n     <script>\r\nimport axios from 'axios';\r\nimport Header from '../../components/AdminHeader.vue';\r\nexport default {\r\n    components:{Header},\r\n  data() {\r\n    return {\r\n      startDate: null,\r\n      endDate: null,\r\n      fetchedData: null,\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchData() {\r\n      // Prepare filter criteria\r\n      const criteria = {\r\n        startDate: this.startDate,\r\n        endDate: this.endDate,\r\n      };\r\n\r\n      try {\r\n        // Make a GET request to fetch data based on the date range\r\n        const response = await axios.get('/fetch', { params: criteria });\r\n        this.fetchedData = response.data.data; // Assuming the response has a \"data\" property\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    },\r\n\r\n    async exportData() {\r\n      // Prepare filter criteria\r\n      const criteria = {\r\n        startDate: this.startDate,\r\n        endDate: this.endDate,\r\n      };\r\n\r\n      try {\r\n        // Make a GET request to the backend export endpoint with filter criteria\r\n        const response = await axios.get(`/generate?${new URLSearchParams(criteria).toString()}`, {\r\n          responseType: 'blob',\r\n        });\r\n\r\n        // Create a Blob URL for the exported data\r\n        const url = window.URL.createObjectURL(new Blob([response.data]));\r\n\r\n        // Create a link element to trigger the download\r\n        const link = document.createElement('a');\r\n        link.href = url;\r\n        link.setAttribute('download', 'exported_data.csv');\r\n\r\n        // Append the link to the DOM and trigger the download\r\n        document.body.appendChild(link);\r\n        link.click();\r\n\r\n        // Remove the link from the DOM\r\n        document.body.removeChild(link);\r\n      } catch (error) {\r\n        console.error('Error exporting data:', error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;EACSA,KAAK,EAAC;AAAoB;;EAEtBA,KAAK,EAAC;AAAmC;;EACrCA,KAAK,EAAC;AAAY;;EAChBA,KAAK,EAAC;AAAsB;gCASzBC,mBAAA,CAA0B,eAAnB,aAAW;gCAGlBA,mBAAA,CAAwB,eAAjB,WAAS;;;EAOUD,KAAK,EAAC;;gCAC9BC,mBAAA,CAMQ,gB,aALNA,mBAAA,CAIK,a,aAHHC,mBAAA,wEACqB,E,aACrBA,mBAAA,wCAA2C,C;;EAMtCF,KAAK,EAAC;AAAK;;EACPA,KAAK,EAAC;AAAK;;;uBAnC5CG,mBAAA,CA6CM,OA7CNC,UA6CM,GA5CFC,YAAA,CAASC,iBAAA,GACTL,mBAAA,CA0CM,OA1CNM,UA0CM,GAzCFN,mBAAA,CAwCM,OAxCNO,UAwCM,GAvCJP,mBAAA,CAsCM,OAtCNQ,UAsCM,GArCJP,mBAAA,2SAKY,EAERD,mBAAA,CA4BM,cA3BJS,UAA0B,E,gBAC1BT,mBAAA,CAAyC;IAAlCU,IAAI,EAAC,MAAM;+DAAUC,KAAA,CAAAC,SAAS,GAAAC,MAAA;iDAATF,KAAA,CAAAC,SAAS,E,GAErCE,UAAwB,E,gBACxBd,mBAAA,CAAuC;IAAhCU,IAAI,EAAC,MAAM;+DAAUC,KAAA,CAAAI,OAAO,GAAAF,MAAA;iDAAPF,KAAA,CAAAI,OAAO,E,GAEnCf,mBAAA,CAA8C;IAArCgB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;KAAE,YAAU,GACrClB,mBAAA,CAAgD;IAAvCgB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAE,UAAA,IAAAF,QAAA,CAAAE,UAAA,IAAAH,IAAA,CAAU;KAAE,aAAW,GAEvCjB,mBAAA,8BAAiC,EACpBU,KAAA,CAAAW,WAAW,I,cAAxBpB,mBAAA,CAgBQ,SAhBRqB,UAgBQ,GAfNC,UAMQ,EACRxB,mBAAA,CAOQ,iB,kBANNE,mBAAA,CAKKuB,SAAA,QAAAC,WAAA,CALyBf,KAAA,CAAAW,WAAW,GAA7BK,GAAG,EAAEC,QAAQ;yBAAzB1B,mBAAA,CAKK;MALuC2B,GAAG,EAAED;IAAQ,K,kBACvD1B,mBAAA,CAAyEuB,SAAA,QAAAC,WAAA,CAAvCC,GAAG,GAAzBG,IAAI,EAAEC,WAAW;2BAA7B7B,mBAAA,CAAyE;QAAjC2B,GAAG,EAAEE;MAAW,GAAAC,gBAAA,CAAKF,IAAI;oCACjE9B,mBAAA,CAEM,OAFNiC,UAEM,GADFjC,mBAAA,CAAiC,OAAjCkC,WAAiC,EAAAF,gBAAA,CAAbG,IAAA,CAAAL,IAAI,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}