{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      startDate: null,\n      endDate: null\n      // Add other filter criteria variables as needed\n    };\n  },\n\n  methods: {\n    exportData() {\n      // Prepare filter criteria\n      const queryParams = {\n        startDate: this.startDate,\n        endDate: this.endDate\n        // Add other filter criteria as needed\n      };\n\n      // Convert filter criteria to a query string\n      const queryString = new URLSearchParams(queryParams).toString();\n\n      // Make a GET request to the backend export endpoint with filter criteria\n      axios.get(`/export?${queryString}`, {\n        responseType: 'blob'\n      }) // responseType: 'blob' to handle binary data\n      .then(response => {\n        // Create a Blob URL for the exported data\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n\n        // Create a link element to trigger the download\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', 'exported_data.csv');\n\n        // Append the link to the DOM and trigger the download\n        document.body.appendChild(link);\n        link.click();\n\n        // Remove the link from the DOM\n        document.body.removeChild(link);\n      }).catch(error => {\n        console.error('Error exporting data:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","startDate","endDate","methods","exportData","queryParams","queryString","URLSearchParams","toString","get","responseType","then","response","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","catch","error","console"],"sources":["C:\\laragon\\www\\frontend\\src\\views\\user\\Generate.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <label>Date Range:</label>\r\n      <input type=\"date\" v-model=\"startDate\" />\r\n      <input type=\"date\" v-model=\"endDate\" />\r\n  \r\n      <!-- Add other filter criteria inputs as needed -->\r\n  \r\n      <button @click=\"exportData\">Export Data</button>\r\n    </div>\r\n  </template>\r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        startDate: null,\r\n        endDate: null,\r\n        // Add other filter criteria variables as needed\r\n      };\r\n    },\r\n    methods: {\r\n      exportData() {\r\n        // Prepare filter criteria\r\n        const queryParams = {\r\n          startDate: this.startDate,\r\n          endDate: this.endDate,\r\n          // Add other filter criteria as needed\r\n        };\r\n  \r\n        // Convert filter criteria to a query string\r\n        const queryString = new URLSearchParams(queryParams).toString();\r\n  \r\n        // Make a GET request to the backend export endpoint with filter criteria\r\n        axios\r\n          .get(`/export?${queryString}`, { responseType: 'blob' }) // responseType: 'blob' to handle binary data\r\n          .then(response => {\r\n            // Create a Blob URL for the exported data\r\n            const url = window.URL.createObjectURL(new Blob([response.data]));\r\n  \r\n            // Create a link element to trigger the download\r\n            const link = document.createElement('a');\r\n            link.href = url;\r\n            link.setAttribute('download', 'exported_data.csv');\r\n            \r\n            // Append the link to the DOM and trigger the download\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            \r\n            // Remove the link from the DOM\r\n            document.body.removeChild(link);\r\n          })\r\n          .catch(error => {\r\n            console.error('Error exporting data:', error);\r\n          });\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n    "],"mappings":";;;AAYE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,IAAI;MACfC,OAAO,EAAE;MACT;IACF,CAAC;EACH,CAAC;;EACDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX;MACA,MAAMC,WAAU,GAAI;QAClBJ,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBC,OAAO,EAAE,IAAI,CAACA;QACd;MACF,CAAC;;MAED;MACA,MAAMI,WAAU,GAAI,IAAIC,eAAe,CAACF,WAAW,CAAC,CAACG,QAAQ,CAAC,CAAC;;MAE/D;MACAT,KAAI,CACDU,GAAG,CAAE,WAAUH,WAAY,EAAC,EAAE;QAAEI,YAAY,EAAE;MAAO,CAAC,EAAE;MAAA,CACxDC,IAAI,CAACC,QAAO,IAAK;QAChB;QACA,MAAMC,GAAE,GAAIC,MAAM,CAACC,GAAG,CAACC,eAAe,CAAC,IAAIC,IAAI,CAAC,CAACL,QAAQ,CAACZ,IAAI,CAAC,CAAC,CAAC;;QAEjE;QACA,MAAMkB,IAAG,GAAIC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;QACxCF,IAAI,CAACG,IAAG,GAAIR,GAAG;QACfK,IAAI,CAACI,YAAY,CAAC,UAAU,EAAE,mBAAmB,CAAC;;QAElD;QACAH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;QAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC;;QAEZ;QACAN,QAAQ,CAACI,IAAI,CAACG,WAAW,CAACR,IAAI,CAAC;MACjC,CAAC,EACAS,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,CAAC,CAAC;IACN;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}