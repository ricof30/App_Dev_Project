{"ast":null,"code":"import 'bootstrap/dist/css/bootstrap.min.css';\nexport default {\n  data() {\n    return {\n      selectedMonth: 'January',\n      beneficiaries: [{\n        name: 'John Doe',\n        amount: '$100'\n      }\n      // Add more beneficiaries as needed\n      ],\n\n      showTable: false // Flag to show/hide the table\n    };\n  },\n\n  computed: {\n    filteredBeneficiaries() {\n      // Filter beneficiaries based on the selected month\n      return this.beneficiaries.filter(beneficiary => {\n        // Add logic to check if the beneficiary falls within the selected month\n        return true; // Replace with your filtering logic\n      });\n    }\n  },\n\n  methods: {\n    filterBeneficiaries() {\n      // Assume you have a backend API to fetch data\n      // Replace the following with your actual API call\n      // For now, we'll just simulate a delay and update the beneficiaries\n      setTimeout(() => {\n        this.beneficiaries = [{\n          name: 'Jane Doe',\n          amount: '$200'\n        }\n        // Add more beneficiaries as needed\n        ];\n\n        this.showTable = true; // Show the table after data is received\n      }, 1000); // Simulating a delay (you can remove this in a real scenario)\n    }\n  }\n};","map":{"version":3,"names":["data","selectedMonth","beneficiaries","name","amount","showTable","computed","filteredBeneficiaries","filter","beneficiary","methods","filterBeneficiaries","setTimeout"],"sources":["C:\\laragon\\www\\frontend\\src\\views\\user\\Beneficiary.vue"],"sourcesContent":["<template>\r\n    <div class=\"container mt-5\">\r\n      <h1 class=\"mb-4\">Beneficiary Management</h1>\r\n  \r\n      <!-- Filter Form -->\r\n      <form @submit.prevent=\"filterBeneficiaries\" class=\"form-inline mb-3\">\r\n        <label for=\"filterMonth\" class=\"mr-2\">Filter by Month:</label>\r\n        <select v-model=\"selectedMonth\" class=\"form-control mr-2\">\r\n          <option value=\"January\">January</option>\r\n          <!-- Add other months as needed -->\r\n        </select>\r\n        <button type=\"submit\" class=\"btn btn-primary\">Filter</button>\r\n      </form>\r\n  \r\n      <!-- Display Filtered Beneficiaries -->\r\n      <div class=\"mt-4\" v-if=\"showTable\">\r\n        <h3>Filtered Beneficiaries</h3>\r\n        <table class=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Amount</th>\r\n              <!-- Add more columns as needed -->\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"(beneficiary, index) in filteredBeneficiaries\" :key=\"index\">\r\n              <td>{{ beneficiary.name }}</td>\r\n              <td>{{ beneficiary.amount }}</td>\r\n              <!-- Add more columns as needed -->\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import 'bootstrap/dist/css/bootstrap.min.css';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        selectedMonth: 'January',\r\n        beneficiaries: [\r\n          { name: 'John Doe', amount: '$100' },\r\n          // Add more beneficiaries as needed\r\n        ],\r\n        showTable: false, // Flag to show/hide the table\r\n      };\r\n    },\r\n    computed: {\r\n      filteredBeneficiaries() {\r\n        // Filter beneficiaries based on the selected month\r\n        return this.beneficiaries.filter((beneficiary) => {\r\n          // Add logic to check if the beneficiary falls within the selected month\r\n          return true; // Replace with your filtering logic\r\n        });\r\n      },\r\n    },\r\n    methods: {\r\n      filterBeneficiaries() {\r\n        // Assume you have a backend API to fetch data\r\n        // Replace the following with your actual API call\r\n        // For now, we'll just simulate a delay and update the beneficiaries\r\n        setTimeout(() => {\r\n          this.beneficiaries = [\r\n            { name: 'Jane Doe', amount: '$200' },\r\n            // Add more beneficiaries as needed\r\n          ];\r\n          this.showTable = true; // Show the table after data is received\r\n        }, 1000); // Simulating a delay (you can remove this in a real scenario)\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Add your custom styles here */\r\n  </style>\r\n  "],"mappings":"AAsCE,OAAO,sCAAsC;AAE7C,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,SAAS;MACxBC,aAAa,EAAE,CACb;QAAEC,IAAI,EAAE,UAAU;QAAEC,MAAM,EAAE;MAAO;MACnC;MAAA,CACD;;MACDC,SAAS,EAAE,KAAK,CAAE;IACpB,CAAC;EACH,CAAC;;EACDC,QAAQ,EAAE;IACRC,qBAAqBA,CAAA,EAAG;MACtB;MACA,OAAO,IAAI,CAACL,aAAa,CAACM,MAAM,CAAEC,WAAW,IAAK;QAChD;QACA,OAAO,IAAI,EAAE;MACf,CAAC,CAAC;IACJ;EACF,CAAC;;EACDC,OAAO,EAAE;IACPC,mBAAmBA,CAAA,EAAG;MACpB;MACA;MACA;MACAC,UAAU,CAAC,MAAM;QACf,IAAI,CAACV,aAAY,GAAI,CACnB;UAAEC,IAAI,EAAE,UAAU;UAAEC,MAAM,EAAE;QAAO;QACnC;QAAA,CACD;;QACD,IAAI,CAACC,SAAQ,GAAI,IAAI,EAAE;MACzB,CAAC,EAAE,IAAI,CAAC,EAAE;IACZ;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}