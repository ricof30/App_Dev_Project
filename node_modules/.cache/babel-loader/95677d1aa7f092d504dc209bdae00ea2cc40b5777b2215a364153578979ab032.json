{"ast":null,"code":"import Header from '../components/AdminHeader.vue';\nimport axios from 'axios';\nexport default {\n  components: {\n    Header\n  },\n  name: 'Upload',\n  data() {\n    return {\n      data: null,\n      columns: null\n    };\n  },\n  methods: {\n    async handleFileUpload(event) {\n      const file = event.target.files[0];\n      const formData = new FormData();\n      formData.append('excelFile', file);\n      try {\n        const response = await axios.post('/upload', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        if (response.status === 200) {\n          const excelData = response.data.data;\n          this.data = excelData;\n          this.columns = this.extractColumns(excelData);\n        } else {\n          console.error('Error uploading file.');\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    extractColumns(data) {\n      const firstRow = data[0];\n      return Object.keys(firstRow);\n    }\n  }\n};","map":{"version":3,"names":["Header","axios","components","name","data","columns","methods","handleFileUpload","event","file","target","files","formData","FormData","append","response","post","headers","status","excelData","extractColumns","console","error","firstRow","Object","keys"],"sources":["C:\\laragon\\www\\frontend\\src\\views\\Upload.vue"],"sourcesContent":["\r\n<template>\r\n  <div class=\"container-scroller\">\r\n    <Header/>\r\n    <div class=\"container-fluid page-body-wrapper\">\r\n      <div class=\"main-panel\">\r\n        <div class=\"content-wrapper pb-0\">\r\n          <div>\r\n            <div class=\"mt-3\">\r\n              <!-- <label for=\"fileUpload\" class=\"form-label\">Choose a file:</label> -->\r\n              <input type=\"file\" @change=\"handleFileUpload\" id=\"fileUpload\" />\r\n            </div>\r\n            <table v-if=\"data\" class=\"table table-bordered mt-3\">\r\n              <thead>\r\n                <tr>\r\n                  <!-- <th v-for=\"(column, columnIndex) in columns\" :key=\"columnIndex\">{{ column }}</th> -->\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr v-for=\"(row, rowIndex) in data\" :key=\"rowIndex\">\r\n                  <td v-for=\"(cell, columnIndex) in row\" :key=\"columnIndex\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col\">{{ cell }}</div>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Header from '../components/AdminHeader.vue';\r\nimport axios from 'axios';\r\n    export default {\r\n      components:{Header},\r\n        name: 'Upload',\r\n        data() {\r\n    return {\r\n      data: null,\r\n      columns: null,\r\n    };\r\n  },\r\n    \r\n \r\n\r\n  methods: {\r\n    async handleFileUpload(event) {\r\n      const file = event.target.files[0];\r\n\r\n      const formData = new FormData();\r\n      formData.append('excelFile', file);\r\n\r\n      try {\r\n        const response = await axios.post('/upload', formData, {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n        });\r\n\r\n        if (response.status === 200) {\r\n          const excelData = response.data.data;\r\n          this.data = excelData;\r\n          this.columns = this.extractColumns(excelData);\r\n        } else {\r\n          console.error('Error uploading file.');\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n\r\n    extractColumns(data) {\r\n      const firstRow = data[0];\r\n      return Object.keys(firstRow);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":"AAoCA,OAAOA,MAAK,MAAO,+BAA+B;AAClD,OAAOC,KAAI,MAAO,OAAO;AACrB,eAAe;EACbC,UAAU,EAAC;IAACF;EAAM,CAAC;EACjBG,IAAI,EAAE,QAAQ;EACdC,IAAIA,CAAA,EAAG;IACX,OAAO;MACLA,IAAI,EAAE,IAAI;MACVC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EAIDC,OAAO,EAAE;IACP,MAAMC,gBAAgBA,CAACC,KAAK,EAAE;MAC5B,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAElC,MAAMC,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEL,IAAI,CAAC;MAElC,IAAI;QACF,MAAMM,QAAO,GAAI,MAAMd,KAAK,CAACe,IAAI,CAAC,SAAS,EAAEJ,QAAQ,EAAE;UACrDK,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QAEF,IAAIF,QAAQ,CAACG,MAAK,KAAM,GAAG,EAAE;UAC3B,MAAMC,SAAQ,GAAIJ,QAAQ,CAACX,IAAI,CAACA,IAAI;UACpC,IAAI,CAACA,IAAG,GAAIe,SAAS;UACrB,IAAI,CAACd,OAAM,GAAI,IAAI,CAACe,cAAc,CAACD,SAAS,CAAC;QAC/C,OAAO;UACLE,OAAO,CAACC,KAAK,CAAC,uBAAuB,CAAC;QACxC;MACF,EAAE,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAEDF,cAAcA,CAAChB,IAAI,EAAE;MACnB,MAAMmB,QAAO,GAAInB,IAAI,CAAC,CAAC,CAAC;MACxB,OAAOoB,MAAM,CAACC,IAAI,CAACF,QAAQ,CAAC;IAC9B;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}