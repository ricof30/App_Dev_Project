{"ast":null,"code":"import axios from 'axios';\nexport default {\n  computed: {\n    id() {\n      return localStorage.getItem('id');\n    }\n  },\n  data() {\n    return {\n      newPassword: '',\n      confirmPassword: ''\n    };\n  },\n  methods: {\n    async submitForm() {\n      try {\n        // Use this.id to access the id data property\n        const inf = await axios.post(`/update/${this.id}`, {\n          newPassword: this.newPassword,\n          confirmPassword: this.confirmPassword\n        });\n        console.log('Update response:', inf.data);\n\n        // Clear the form fields after submission\n        this.newPassword = '';\n        this.confirmPassword = '';\n\n        // Add your logic for handling the submission, such as showing a confirmation message to the user.\n      } catch (error) {\n        console.error('Error updating password:', error.response.data);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","computed","id","localStorage","getItem","data","newPassword","confirmPassword","methods","submitForm","inf","post","console","log","error","response"],"sources":["C:\\laragon\\www\\frontend\\src\\components\\admin\\update_password.vue"],"sourcesContent":["<template>\r\n    <div class=\"container mt-5\">\r\n      <div class=\"row justify-content-center\">\r\n        <div class=\"col-md-6\">\r\n          <div class=\"card\">\r\n            <div class=\"card-body\">\r\n              <h2 class=\"text-center mb-4\">Update Password</h2>\r\n              <form @submit.prevent=\"submitForm\">\r\n                <div class=\"form-group\">\r\n                  <input type=\"hidden\" v-model=\"id\">\r\n                  <label for=\"newPassword\">New Password</label>\r\n                  <input type=\"password\" class=\"form-control\" v-model=\"newPassword\" required />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label for=\"confirmPassword\">Confirm New Password</label>\r\n                  <input type=\"password\" class=\"form-control\" v-model=\"confirmPassword\" required />\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-primary btn-block mt-4\">Update Password</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    computed: {\r\n      id() {\r\n        return localStorage.getItem('id');\r\n      },\r\n    },\r\n    data() {\r\n      return {\r\n        newPassword: '',\r\n        confirmPassword: '',\r\n      };\r\n    },\r\n    methods: {\r\n      async submitForm() {\r\n        try {\r\n          // Use this.id to access the id data property\r\n          const inf = await axios.post(`/update/${this.id}`, {\r\n            newPassword: this.newPassword,\r\n            confirmPassword: this.confirmPassword,\r\n          });\r\n  \r\n          console.log('Update response:', inf.data);\r\n  \r\n          // Clear the form fields after submission\r\n          this.newPassword = '';\r\n          this.confirmPassword = '';\r\n  \r\n          // Add your logic for handling the submission, such as showing a confirmation message to the user.\r\n        } catch (error) {\r\n          console.error('Error updating password:', error.response.data);\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Add custom styles or override Bootstrap styles here */\r\n  </style>\r\n  "],"mappings":"AA2BE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,QAAQ,EAAE;IACRC,EAAEA,CAAA,EAAG;MACH,OAAOC,YAAY,CAACC,OAAO,CAAC,IAAI,CAAC;IACnC;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,eAAe,EAAE;IACnB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF;QACA,MAAMC,GAAE,GAAI,MAAMV,KAAK,CAACW,IAAI,CAAE,WAAU,IAAI,CAACT,EAAG,EAAC,EAAE;UACjDI,WAAW,EAAE,IAAI,CAACA,WAAW;UAC7BC,eAAe,EAAE,IAAI,CAACA;QACxB,CAAC,CAAC;QAEFK,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,GAAG,CAACL,IAAI,CAAC;;QAEzC;QACA,IAAI,CAACC,WAAU,GAAI,EAAE;QACrB,IAAI,CAACC,eAAc,GAAI,EAAE;;QAEzB;MACF,EAAE,OAAOO,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACC,QAAQ,CAACV,IAAI,CAAC;MAChE;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}