{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Date Range:\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.startDate = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.startDate]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.endDate = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.endDate]]), _createCommentVNode(\" Add other filter criteria inputs as needed \"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.exportData && $options.exportData(...args))\n  }, \"Export Data\")]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","type","$data","startDate","$event","endDate","_createCommentVNode","onClick","_cache","args","$options","exportData"],"sources":["C:\\laragon\\www\\frontend\\src\\views\\user\\Generate.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <label>Date Range:</label>\r\n      <input type=\"date\" v-model=\"startDate\" />\r\n      <input type=\"date\" v-model=\"endDate\" />\r\n  \r\n      <!-- Add other filter criteria inputs as needed -->\r\n  \r\n      <button @click=\"exportData\">Export Data</button>\r\n    </div>\r\n  </template>\r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        startDate: null,\r\n        endDate: null,\r\n        // Add other filter criteria variables as needed\r\n      };\r\n    },\r\n    methods: {\r\n      exportData() {\r\n        // Prepare filter criteria\r\n        const queryParams = {\r\n          startDate: this.startDate,\r\n          endDate: this.endDate,\r\n          // Add other filter criteria as needed\r\n        };\r\n  \r\n        // Convert filter criteria to a query string\r\n        const queryString = new URLSearchParams(queryParams).toString();\r\n  \r\n        // Make a GET request to the backend export endpoint with filter criteria\r\n        axios\r\n          .get(`/export?${queryString}`, { responseType: 'blob' }) // responseType: 'blob' to handle binary data\r\n          .then(response => {\r\n            // Create a Blob URL for the exported data\r\n            const url = window.URL.createObjectURL(new Blob([response.data]));\r\n  \r\n            // Create a link element to trigger the download\r\n            const link = document.createElement('a');\r\n            link.href = url;\r\n            link.setAttribute('download', 'exported_data.csv');\r\n            \r\n            // Append the link to the DOM and trigger the download\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            \r\n            // Remove the link from the DOM\r\n            document.body.removeChild(link);\r\n          })\r\n          .catch(error => {\r\n            console.error('Error exporting data:', error);\r\n          });\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n    "],"mappings":";gCAEMA,mBAAA,CAA0B,eAAnB,aAAW;;;uBADpBC,mBAAA,CAQM,cAPJC,UAA0B,E,gBAC1BF,mBAAA,CAAyC;IAAlCG,IAAI,EAAC,MAAM;+DAAUC,KAAA,CAAAC,SAAS,GAAAC,MAAA;iDAATF,KAAA,CAAAC,SAAS,E,mBACrCL,mBAAA,CAAuC;IAAhCG,IAAI,EAAC,MAAM;+DAAUC,KAAA,CAAAG,OAAO,GAAAD,MAAA;iDAAPF,KAAA,CAAAG,OAAO,E,GAEnCC,mBAAA,gDAAmD,EAEnDR,mBAAA,CAAgD;IAAvCS,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;KAAE,aAAW,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}