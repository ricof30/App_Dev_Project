{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  computed: {\n    id() {\n      return localStorage.getItem('id');\n    }\n  },\n  data() {\n    return {\n      newPassword: '',\n      confirmPassword: '',\n      passwordError: '',\n      isValidPassword: true,\n      isValidRepeatPassword: true\n    };\n  },\n  methods: {\n    async submitForm() {\n      this.isValidPassword = this.newPassword.length >= 6;\n      this.isValidRepeatPassword = this.newPassword === this.confirmPassword;\n      const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@#])[A-Za-z\\d@#]+$/;\n      if (!passwordRegex.test(this.newPassword)) {\n        this.isValidPassword = false;\n        this.passwordError = 'Password must contain at least one letter, one number, and one character';\n      }\n      if (this.isValidPassword && this.isValidRepeatPassword) {\n        try {\n          const inf = await axios.post(`/updatePassword/${this.id}`, {\n            newPassword: this.newPassword\n          });\n          localStorage.removeItem('id');\n          this.$router.push('/login');\n          console.log('Update response:', inf.data);\n          this.newPassword = '';\n          this.confirmPassword = '';\n        } catch (error) {\n          console.error('Error updating password:', error.response.data);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","computed","id","localStorage","getItem","data","newPassword","confirmPassword","passwordError","isValidPassword","isValidRepeatPassword","methods","submitForm","length","passwordRegex","test","inf","post","removeItem","$router","push","console","log","error","response"],"sources":["C:\\laragon\\www\\frontend\\src\\components\\admin\\update_password.vue"],"sourcesContent":["    <template>\r\n        <body class=\" bg-primary\">\r\n        <div class=\"container mt-5\">\r\n            <div class=\"row align-items-center justify-content-center min-vh-100 \">\r\n            <div class=\"col-md-6\">\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                <h2 class=\"text-center mb-4\">Update Password</h2>\r\n                <form @submit.prevent=\"submitForm\">\r\n                    <div class=\"form-group\">\r\n                    <label for=\"newPassword\">New Password</label>\r\n                    <input type=\"password\" class=\"form-control\" v-model=\"newPassword\" required />\r\n                    <span v-if=\"!isValidPassword\" class=\"text-danger\">{{ passwordError || 'Please enter a valid password' }}</span>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                    <label for=\"confirmPassword\">Confirm New Password</label>\r\n                    <input type=\"password\" class=\"form-control\" v-model=\"confirmPassword\" required />\r\n                    <span v-if=\"!isValidRepeatPassword\" class=\"text-danger\">Passwords do not match</span>\r\n                    </div>\r\n                    <button type=\"submit\" class=\"btn btn-primary btn-block mt-4\">Update Password</button>\r\n                </form>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </body>\r\n    </template>\r\n    \r\n    <script>\r\n    import axios from 'axios';\r\n    \r\n    export default {\r\n        computed: {\r\n        id() {\r\n            return localStorage.getItem('id');\r\n        },\r\n        },\r\n        data() {\r\n        return {\r\n            newPassword: '',\r\n            confirmPassword: '',\r\n            passwordError: '',\r\n            isValidPassword: true,\r\n            isValidRepeatPassword: true,\r\n        };\r\n        },\r\n        methods: {\r\n        async submitForm() {\r\n            this.isValidPassword = this.newPassword.length >= 6; \r\n            this.isValidRepeatPassword = this.newPassword === this.confirmPassword;\r\n            \r\n\r\n            const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@#])[A-Za-z\\d@#]+$/;\r\n            if (!passwordRegex.test(this.newPassword)) {\r\n            this.isValidPassword = false;\r\n            this.passwordError = 'Password must contain at least one letter, one number, and one character';\r\n            }\r\n        \r\n            \r\n            if (this.isValidPassword && this.isValidRepeatPassword) {\r\n            try {\r\n            const inf = await axios.post(`/updatePassword/${this.id}`, {\r\n                newPassword: this.newPassword,\r\n            });\r\n            localStorage.removeItem('id');\r\n            this.$router.push('/login');\r\n            console.log('Update response:', inf.data);\r\n            this.newPassword = '';\r\n            this.confirmPassword = '';\r\n    \r\n            } catch (error) {\r\n            console.error('Error updating password:', error.response.data);\r\n            }\r\n        }\r\n        },\r\n        },\r\n    };\r\n    </script>\r\n    \r\n    <style scoped>\r\n    /* Add custom styles or override Bootstrap styles here */\r\n    </style>\r\n    "],"mappings":";AA8BI,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACXC,QAAQ,EAAE;IACVC,EAAEA,CAAA,EAAG;MACD,OAAOC,YAAY,CAACC,OAAO,CAAC,IAAI,CAAC;IACrC;EACA,CAAC;EACDC,IAAIA,CAAA,EAAG;IACP,OAAO;MACHC,WAAW,EAAE,EAAE;MACfC,eAAe,EAAE,EAAE;MACnBC,aAAa,EAAE,EAAE;MACjBC,eAAe,EAAE,IAAI;MACrBC,qBAAqB,EAAE;IAC3B,CAAC;EACD,CAAC;EACDC,OAAO,EAAE;IACT,MAAMC,UAAUA,CAAA,EAAG;MACf,IAAI,CAACH,eAAc,GAAI,IAAI,CAACH,WAAW,CAACO,MAAK,IAAK,CAAC;MACnD,IAAI,CAACH,qBAAoB,GAAI,IAAI,CAACJ,WAAU,KAAM,IAAI,CAACC,eAAe;MAGtE,MAAMO,aAAY,GAAI,iDAAiD;MACvE,IAAI,CAACA,aAAa,CAACC,IAAI,CAAC,IAAI,CAACT,WAAW,CAAC,EAAE;QAC3C,IAAI,CAACG,eAAc,GAAI,KAAK;QAC5B,IAAI,CAACD,aAAY,GAAI,0EAA0E;MAC/F;MAGA,IAAI,IAAI,CAACC,eAAc,IAAK,IAAI,CAACC,qBAAqB,EAAE;QACxD,IAAI;UACJ,MAAMM,GAAE,GAAI,MAAMhB,KAAK,CAACiB,IAAI,CAAE,mBAAkB,IAAI,CAACf,EAAG,EAAC,EAAE;YACvDI,WAAW,EAAE,IAAI,CAACA;UACtB,CAAC,CAAC;UACFH,YAAY,CAACe,UAAU,CAAC,IAAI,CAAC;UAC7B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;UAC3BC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEN,GAAG,CAACX,IAAI,CAAC;UACzC,IAAI,CAACC,WAAU,GAAI,EAAE;UACrB,IAAI,CAACC,eAAc,GAAI,EAAE;QAEzB,EAAE,OAAOgB,KAAK,EAAE;UAChBF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACC,QAAQ,CAACnB,IAAI,CAAC;QAC9D;MACJ;IACA;EACA;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}