{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5c1a703e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  ref: \"chart\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"canvas\", _hoisted_1, null, 512 /* NEED_PATCH */)]);\n}","map":{"version":3,"names":["ref","_createElementBlock","_createElementVNode","_hoisted_1"],"sources":["C:\\laragon\\www\\frontend\\src\\components\\admin\\chart.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <canvas ref=\"chart\"></canvas>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import Chart from 'chart.js/auto';\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        chartData: {},\r\n      };\r\n    },\r\n    mounted() {\r\n      this.fetchChartData();\r\n    },\r\n    methods: {\r\n      fetchChartData() {\r\n        axios.get('chart') // Replace with your actual API endpoint\r\n          .then(response => {\r\n            this.chartData = response.data;\r\n            this.renderChart();\r\n          })\r\n          .catch(error => {\r\n            console.error('Error fetching chart data:', error);\r\n          });\r\n      },\r\n      renderChart() {\r\n        const ctx = this.$refs.chart.getContext('2d');\r\n  \r\n        new Chart(ctx, {\r\n          type: 'line', // Change the chart type as needed (e.g., line, pie, etc.)\r\n        data: {\r\n          labels: this.chartData.labels,\r\n          datasets: [{\r\n            label: 'Chart Data',\r\n            data: this.chartData.values,\r\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n            borderColor: 'rgba(75, 192, 192, 1)',\r\n            borderWidth: 1,\r\n          }],\r\n        },\r\n          options: {\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n          },\r\n        });\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Add your component-specific styles here */\r\n  </style>\r\n  "],"mappings":";;;EAEcA,GAAG,EAAC;AAAO;;uBADrBC,mBAAA,CAEM,cADJC,mBAAA,CAA6B,UAA7BC,UAA6B,8B"},"metadata":{},"sourceType":"module","externalDependencies":[]}