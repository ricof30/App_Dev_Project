{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport Sidebar from '../components/Sidebar.vue';\nimport Header from '../components/Header.vue';\nexport default {\n  components: {\n    Sidebar,\n    Header\n  },\n  name: 'DashboardTable',\n  props: ['entryId'],\n  data() {\n    return {\n      details: {} // Initialize details as an empty object\n      // full_name: '',\n      // nameOfValidator: \"\",\n      // validated: \"\",\n      // typeOfUpdate: [],\n      // submitted: \"\",\n      // accomplished:\"\",\n      // dateValidated:\"\",\n      // dateSubmitted:\"\",\n      // updateRequest:\"\",\n      // encoded:\"\",\n    };\n  },\n\n  created() {\n    const entryId = this.$route.params.entryId;\n    console.log('Received entryId:', entryId);\n    if (entryId) {\n      this.editDetails(entryId);\n    }\n  },\n  watch: {\n    details: {\n      handler() {\n        // Concatenate first name, middle name, and last name\n        this.full_name = `${this.details.FIRST_NAME} ${this.details.MIDDLE_NAME} ${this.details.LAST_NAME}`.trim();\n      },\n      deep: true // Watch for changes inside details object\n    }\n  },\n\n  mounted() {\n    flatpickr(\"#dateValidated\", {\n      dateFormat: \"Y-m-d\"\n    });\n    flatpickr(\"#dateSubmitted\", {\n      dateFormat: \"Y-m-d\"\n    });\n  },\n  methods: {\n    async insert() {\n      const selectedTypeOfUpdate = Object.keys(this.typeOfUpdate).filter(key => this.typeOfUpdate[key]);\n      console.log(selectedTypeOfUpdate);\n      try {\n        const ins = await axios.post(\"insert\", {\n          ENTRY_ID: this.details.ENTRY_ID,\n          MUNICIPALITY: this.details.MUNICIPALITY,\n          HH_ID: this.details.HH_ID,\n          BRGY: this.details.BRGY,\n          MEMBER_STATUS: this.details.MEMBER_STATUS,\n          full_name: this.full_name,\n          validated: this.validated,\n          typeOfUpdate: selectedTypeOfUpdate,\n          submitted: this.submitted,\n          accomplished: this.accomplished,\n          dateValidated: this.dateValidated,\n          dateSubmitted: this.dateSubmitted,\n          updateRequest: this.updateRequest,\n          Validator: this.nameOfValidator,\n          encoded: this.encoded\n        });\n        if (ins.status === 200) {\n          // If successful, navigate to the /table route\n          this.$router.push('/updating');\n        } else {\n          // Handle other cases if needed\n          console.error('Insertion was not successful:', ins);\n        }\n      } catch (error) {\n        console.error('Error inserting data:', error);\n      }\n    },\n    async editDetails(entryId) {\n      try {\n        const response = await axios.get(`/getDetails/${entryId}`);\n        this.details = response.data[0]; // Assuming your response is an array with a single object\n\n        if (this.details && this.details.ENTRY_ID) {\n          // Now you can access details.ENTRY_ID and other properties\n          console.log('Details from CodeIgniter:', JSON.parse(JSON.stringify(this.details)));\n        } else {\n          console.error('Invalid details received from CodeIgniter.');\n        }\n      } catch (error) {\n        console.error('Error fetching details:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","flatpickr","Sidebar","Header","components","name","props","data","details","created","entryId","$route","params","console","log","editDetails","watch","handler","full_name","FIRST_NAME","MIDDLE_NAME","LAST_NAME","trim","deep","mounted","dateFormat","methods","insert","selectedTypeOfUpdate","Object","keys","typeOfUpdate","filter","key","ins","post","ENTRY_ID","MUNICIPALITY","HH_ID","BRGY","MEMBER_STATUS","validated","submitted","accomplished","dateValidated","dateSubmitted","updateRequest","Validator","nameOfValidator","encoded","status","$router","push","error","response","get","JSON","parse","stringify"],"sources":["C:\\laragon\\www\\frontend\\src\\components\\EncoderUpdate.vue"],"sourcesContent":["<template>\r\n    <div id=\"wrapper\">\r\n   <!-- <Sidebar></Sidebar> -->\r\n           <div id=\"content-wrapper\" class=\"d-flex flex-column\">\r\n            <div id=\"content\">\r\n                <div class=\"container-fluid\">\r\n                  <div class=\"container mt-5 \">\r\n                    <h2 class=\"mb-10 text-center text-primary font-weight-bold\">Update Information Form</h2>\r\n                    <form id=\"updateForm\" @submit.prevent=\"insert\">\r\n                        <input type=\"hidden\" v-model=\"details.ENTRY_ID  \" id=\"entryId\"  class=\"form-control\" placeholder=\"entryId\" />\r\n                        <input type=\"hidden\" id=\"fullname\"  class=\"form-control\" v-model=\"full_name\"/>\r\n                        <input type=\"hidden\" id=\"municipality\"  class=\"form-control\" v-model=\"details.MUNICIPALITY\"/>\r\n                        <input type=\"hidden\" id=\"hhId\"  class=\"form-control\" v-model=\"details.HH_ID\"/>\r\n                        <input type=\"hidden\" id=\"brgy\"  class=\"form-control\" v-model=\"details.BRGY\"/>\r\n                        <input type=\"hidden\" id=\"memberStatus\"  class=\"form-control\" v-model=\"details.MEMBER_STATUS\"/>    <!-- </div> -->\r\n                \r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-4\">\r\n                              <div class=\"mb-9\">\r\n                                <label for=\"validated\" class=\"form-label\">Validated:</label>\r\n                                <input type=\"hidden\" id=\"fullname\"  class=\"form-control\" v-model=\"details.VALIDATED\"/>\r\n                              </div>\r\n                              <div class=\"mb-9\">\r\n                                <label for=\"submitted\" class=\"form-label\">Submitted:</label>\r\n                                <input type=\"hidden\" id=\"fullname\"  class=\"form-control\" v-model=\"details.SUBMITTED\"/>\r\n                              </div>\r\n                              <div class=\"mb-9\">\r\n                                <label for=\"remarks\" class=\"form-label\">Remarks:</label>\r\n                                <input type=\"text\" id=\"remarks\"  class=\"form-control\" v-model=\"remarks\"/>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col-md-4\">\r\n                      <div class=\"mb-9\">\r\n                        <label for=\"accomplished\" class=\"form-label\">With Accomplished Validation Tool:</label>\r\n                        <input type=\"hidden\" id=\"fullname\"  class=\"form-control\" v-model=\"details.WITH_VALIDATION_TOOL\"/>\r\n                      </div>\r\n                \r\n                      <div class=\"mb-9\">\r\n                        <label for=\"dateValidated\" class=\"form-label\">Date Validated:</label>\r\n                        <input type=\"text\"  id=\"dateValidated\"  v-model=\"details.DATE_VALIDATED\"  style=\"max-width: 500px;\">\r\n                      </div>\r\n                \r\n                      <div class=\"mb-9\">\r\n                        <label for=\"dateSubmitted\" class=\"form-label\">Date Submitted:</label>\r\n                        <input type=\"text\"  id=\"dateSubmitted\"  v-model=\"details.SUBMITTED\"  style=\"max-width: 500px;\">\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-md-4\">\r\n                      <div class=\"mb-9\">\r\n                        <label for=\"updateRequest\" class=\"form-label\">With Update Request:</label>\r\n                        <input type=\"hidden\" id=\"fullname\"  class=\"form-control\" v-model=\"details.WITH_UPDATE_REQUEST\"/>\r\n                      </div>\r\n                \r\n                      <div class=\"mb-9\">\r\n                        <label for=\"nameOfValidator\" class=\"form-label\">Name of Validator:</label>\r\n                        <input type=\"hidden\" id=\"fullname\"  class=\"form-control\" v-model=\"details.NAME_OF_VALIDATOR\"/>\r\n                      </div>\r\n                      <div class=\"mb-9\">\r\n                        <label for=\"encodedInPPIS_MCCT\" class=\"form-label\">Encoded in PPIS_MCCT IS:</label>\r\n                        <input type=\"hidden\" id=\"fullname\"  class=\"form-control\" v-model=\"details.ENCODED_IN_PPIS_MCCTIS\"/>\r\n                      </div>\r\n                      <div class=\"mb-9\">\r\n                        <label for=\"dateValidated\" class=\"form-label\">Date Encoded:</label>\r\n                        <input type=\"text\"  id=\"dateValidated\"  v-model=\"dateEncoded\" data-input class=\"form-control  w-300 \" style=\"max-width: 500px;\">\r\n                      </div>\r\n                    </div>\r\n                      <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n                </div>\r\n                    </form>\r\n                  </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n</div>\r\n \r\n\r\n  \r\n  </template>\r\n  \r\n  <script>\r\n    import axios from 'axios';\r\n  import flatpickr from 'flatpickr';\r\n      import 'flatpickr/dist/flatpickr.min.css';\r\n  import Sidebar from '../components/Sidebar.vue';\r\n  import Header from '../components/Header.vue';\r\n      export default {\r\n        components:{Sidebar,Header},\r\n          name: 'DashboardTable',\r\n\r\n          props: ['entryId'],\r\n    data() {\r\n      return {\r\n        details: {}, // Initialize details as an empty object\r\n        // full_name: '',\r\n        // nameOfValidator: \"\",\r\n        // validated: \"\",\r\n        // typeOfUpdate: [],\r\n        // submitted: \"\",\r\n        // accomplished:\"\",\r\n        // dateValidated:\"\",\r\n        // dateSubmitted:\"\",\r\n        // updateRequest:\"\",\r\n        // encoded:\"\",\r\n      };\r\n    },\r\n    created() {\r\n      const entryId = this.$route.params.entryId;\r\n    console.log('Received entryId:', entryId);\r\n    if (entryId) {\r\n      this.editDetails(entryId);\r\n    }\r\n  },\r\n  watch: {\r\n  details: {\r\n    handler() {\r\n      // Concatenate first name, middle name, and last name\r\n      this.full_name = `${this.details.FIRST_NAME} ${this.details.MIDDLE_NAME} ${this.details.LAST_NAME}`.trim();\r\n    },\r\n    deep: true, // Watch for changes inside details object\r\n  },\r\n},\r\n\r\n    mounted() {\r\n          flatpickr(\"#dateValidated\", { dateFormat: \"Y-m-d\" });\r\n          flatpickr(\"#dateSubmitted\", { dateFormat: \"Y-m-d\" });\r\n        },\r\n    methods: {\r\n      async insert(){\r\n        const selectedTypeOfUpdate = Object.keys(this.typeOfUpdate).filter(key => this.typeOfUpdate[key]);\r\n\r\n        console.log(selectedTypeOfUpdate)\r\n          try {\r\n              const ins = await axios.post(\"insert\",{\r\n                ENTRY_ID: this.details.ENTRY_ID,\r\n                MUNICIPALITY: this.details.MUNICIPALITY,\r\n                HH_ID: this.details.HH_ID,\r\n                BRGY: this.details.BRGY,\r\n                MEMBER_STATUS: this.details.MEMBER_STATUS,\r\n                full_name: this.full_name,\r\n                validated: this.validated,\r\n                typeOfUpdate: selectedTypeOfUpdate,\r\n                submitted: this.submitted,\r\n                accomplished: this.accomplished, \r\n                dateValidated: this.dateValidated,\r\n                dateSubmitted: this.dateSubmitted,\r\n                updateRequest: this.updateRequest,\r\n                Validator: this.nameOfValidator,\r\n                encoded: this.encoded,\r\n              });\r\n              if (ins.status === 200) {\r\n                // If successful, navigate to the /table route\r\n                this.$router.push('/updating');\r\n                  \r\n              } else {\r\n                // Handle other cases if needed\r\n                console.error('Insertion was not successful:', ins);\r\n              }\r\n          } catch (error) {\r\n            console.error('Error inserting data:', error);\r\n          }\r\n      },\r\n    \r\n      async editDetails(entryId) {\r\n        try {\r\n          const response = await axios.get(`/getDetails/${entryId}`);\r\n          this.details = response.data[0]; // Assuming your response is an array with a single object\r\n\r\n          if (this.details && this.details.ENTRY_ID) {\r\n            // Now you can access details.ENTRY_ID and other properties\r\n            console.log('Details from CodeIgniter:', JSON.parse(JSON.stringify(this.details)));\r\n          } else {\r\n            console.error('Invalid details received from CodeIgniter.');\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching details:', error);\r\n        }\r\n      },\r\n    },\r\n      };\r\n  </script>\r\n  \r\n  <style>\r\n  \r\n  </style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}