{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5c1a703e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container mt-5\"\n};\nconst _hoisted_2 = {\n  class: \"row mt-4\"\n};\nconst _hoisted_3 = {\n  class: \"col-md-6\"\n};\nconst _hoisted_4 = {\n  class: \"card bg-primary text-white rounded\"\n};\nconst _hoisted_5 = {\n  class: \"card-body\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h5\", {\n  class: \"card-title\"\n}, \"Total Beneficiaries\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"card-text\"\n};\nconst _hoisted_8 = {\n  class: \"col-md-6\"\n};\nconst _hoisted_9 = {\n  class: \"card bg-success text-white rounded\"\n};\nconst _hoisted_10 = {\n  class: \"card-body\"\n};\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h5\", {\n  class: \"card-title\"\n}, \"Validated Beneficiaries\", -1 /* HOISTED */));\nconst _hoisted_12 = {\n  class: \"card-text\"\n};\nconst _hoisted_13 = {\n  class: \"card\"\n};\nconst _hoisted_14 = {\n  class: \"card-body h-100\"\n};\nconst _hoisted_15 = {\n  ref: \"chart\",\n  style: {\n    \"height\": \"300px\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _createElementVNode(\"h2\", _hoisted_7, _toDisplayString($data.beneficiary.total_beneficiary), 1 /* TEXT */)])])]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_hoisted_11, _createElementVNode(\"h2\", _hoisted_12, _toDisplayString($data.validated.total_validated), 1 /* TEXT */)])])]), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"canvas\", _hoisted_15, null, 512 /* NEED_PATCH */)])]), _createCommentVNode(\" Display the number of beneficiaries and validated beneficiaries \")])]);\n}","map":{"version":3,"names":["class","_createElementVNode","ref","style","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_toDisplayString","$data","beneficiary","total_beneficiary","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","validated","total_validated","_hoisted_13","_hoisted_14","_hoisted_15","_createCommentVNode"],"sources":["C:\\laragon\\www\\frontend\\src\\components\\admin\\chart.vue"],"sourcesContent":["\r\n<template>\r\n  <div class=\"container mt-5\">\r\n    <div class=\"row mt-4\">\r\n      <div class=\"col-md-6\">\r\n        <div class=\"card bg-primary text-white rounded\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Total Beneficiaries</h5>\r\n            <h2 class=\"card-text\">\r\n              {{ beneficiary.total_beneficiary }}\r\n            </h2>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <div class=\"card bg-success text-white rounded\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Validated Beneficiaries</h5>\r\n            <h2 class=\"card-text\">\r\n              {{ validated.total_validated }}\r\n            </h2>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    <div class=\"card\">\r\n      <div class=\"card-body h-100\">\r\n        <canvas ref=\"chart\" style=\"height:300px\"></canvas>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Display the number of beneficiaries and validated beneficiaries -->\r\n    \r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n    \r\n    <script>\r\n    import Chart from 'chart.js/auto';\r\n    import axios from 'axios';\r\n    \r\n    export default {\r\n      data() {\r\n        return {\r\n          beneficiary:[],\r\n          validated:[],\r\n        };\r\n      },\r\n      mounted() {\r\n        this.fetchChartData();\r\n        this.getBeneficiary();\r\n        this.getValidated();\r\n      },\r\n      methods: {\r\n        fetchChartData() {\r\n          axios.get('chart') // Replace with your actual API endpoint\r\n            .then(response => {\r\n              this.chartData = response.data;\r\n              this.renderChart();\r\n            })\r\n            .catch(error => {\r\n              console.error('Error fetching chart data:', error);\r\n            });\r\n        },\r\n        async getBeneficiary(){\r\n                try {\r\n                    const inf = await axios.get('getBeneficiary');\r\n                this.beneficiary = inf.data;\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            },\r\n            async getValidated(){\r\n                try {\r\n                    const inf = await axios.get('getValidated');\r\n                this.validated = inf.data;\r\n                } catch (error) {\r\n                    console.log(error);\r\n                }\r\n            },\r\n        renderChart() {\r\n          const ctx = this.$refs.chart.getContext('2d');\r\n    \r\n          new Chart(ctx, {\r\n            type: 'bar', // Change the chart type as needed (e.g., line, pie, etc.)\r\n          data: {\r\n            labels: this.chartData.labels,\r\n            datasets: [{\r\n              label: 'Best Validator/Encoder',\r\n              data: this.chartData.values,\r\n              backgroundColor: [\r\n            'rgb(10, 129, 209)',\r\n            'rgb(49, 76, 182)',\r\n            'rgb(14, 124, 123)',       \r\n                  ],\r\n          borderColor: [\r\n                      'rgb(0,0,0)',\r\n                      'rgb(100, 97, 160)',\r\n                      'rgb(239, 189, 235)',\r\n                      'rgb(49, 76, 182)',\r\n                      'rgb(140, 255, 218)',\r\n                      'rgb(186, 39, 74)',\r\n                      'rgb(255, 251, 70)',\r\n                      'rgb(14, 124, 123)',\r\n                  ],\r\n              borderWidth: 1,\r\n            }],\r\n          },\r\n            options: {\r\n              responsive: true,\r\n              maintainAspectRatio: false,\r\n            },\r\n          });\r\n        },\r\n      },\r\n    };\r\n    </script>\r\n    \r\n    <style scoped>\r\n    /* Add your component-specific styles here */\r\n    </style>\r\n    "],"mappings":";;;EAEOA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAAoC;;EACxCA,KAAK,EAAC;AAAW;gEACpBC,mBAAA,CAA+C;EAA3CD,KAAK,EAAC;AAAY,GAAC,qBAAmB;;EACtCA,KAAK,EAAC;AAAW;;EAOtBA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAAoC;;EACxCA,KAAK,EAAC;AAAW;iEACpBC,mBAAA,CAAmD;EAA/CD,KAAK,EAAC;AAAY,GAAC,yBAAuB;;EAC1CA,KAAK,EAAC;AAAW;;EAOxBA,KAAK,EAAC;AAAM;;EACVA,KAAK,EAAC;AAAiB;;EAClBE,GAAG,EAAC,OAAO;EAACC,KAAoB,EAApB;IAAA;EAAA;;;uBA1B1BC,mBAAA,CAiCM,OAjCNC,UAiCM,GAhCJJ,mBAAA,CA+BM,OA/BNK,UA+BM,GA9BJL,mBAAA,CASM,OATNM,UASM,GARJN,mBAAA,CAOM,OAPNO,UAOM,GANJP,mBAAA,CAKM,OALNQ,UAKM,GAJJC,UAA+C,EAC/CT,mBAAA,CAEK,MAFLU,UAEK,EAAAC,gBAAA,CADAC,KAAA,CAAAC,WAAW,CAACC,iBAAiB,iB,OAMxCd,mBAAA,CASM,OATNe,UASM,GARJf,mBAAA,CAOM,OAPNgB,UAOM,GANJhB,mBAAA,CAKM,OALNiB,WAKM,GAJJC,WAAmD,EACnDlB,mBAAA,CAEK,MAFLmB,WAEK,EAAAR,gBAAA,CADAC,KAAA,CAAAQ,SAAS,CAACC,eAAe,iB,OAMtCrB,mBAAA,CAIM,OAJNsB,WAIM,GAHJtB,mBAAA,CAEM,OAFNuB,WAEM,GADJvB,mBAAA,CAAkD,UAAlDwB,WAAkD,8B,KAItDC,mBAAA,qEAAwE,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}