{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Row\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Column\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Value\")])], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.handleFileUpload && $options.handleFileUpload(...args))\n  }, null, 32 /* HYDRATE_EVENTS */), $data.data ? (_openBlock(), _createElementBlock(\"table\", _hoisted_1, [_hoisted_2, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.data, (row, rowIndex) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: rowIndex\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(row, (cell, columnIndex) => {\n      return _openBlock(), _createElementBlock(\"td\", {\n        key: columnIndex\n      }, _toDisplayString(cell), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","type","onChange","_cache","args","$options","handleFileUpload","$data","data","_hoisted_1","_hoisted_2","_Fragment","_renderList","row","rowIndex","key","cell","columnIndex","_toDisplayString"],"sources":["C:\\laragon\\www\\frontend\\src\\components\\Upload.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <input type=\"file\" @change=\"handleFileUpload\" />\r\n      <table v-if=\"data\">\r\n        <thead>\r\n          <tr>\r\n            <th>Row</th>\r\n            <th>Column</th>\r\n            <th>Value</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(row, rowIndex) in data\" :key=\"rowIndex\">\r\n            <td v-for=\"(cell, columnIndex) in row\" :key=\"columnIndex\">{{ cell }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    name:'Upload',\r\n    data() {\r\n      return {\r\n        data: null\r\n      };\r\n    },\r\n  \r\n    methods: {\r\n      async handleFileUpload(event) {\r\n        const file = event.target.files[0];\r\n  \r\n        const formData = new FormData();\r\n        formData.append('excelFile', file);\r\n  \r\n        try {\r\n          const response = await axios.post('/upload', formData, {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data'\r\n            }\r\n          });\r\n  \r\n          if (response.status === 200) {\r\n            const data = await this.parseExcelData(file);\r\n            this.data = data;\r\n          } else {\r\n            console.error('Error uploading file.');\r\n          }\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      },\r\n  \r\n      async parseExcelData(file) {\r\n        const workbook = XLSX.readFile(file);\r\n        const firstSheetName = workbook.SheetNames[0];\r\n        const worksheet = workbook.Sheets[firstSheetName];\r\n  \r\n        const data = XLSX.utils.sheet_to_json(worksheet, { raw: true });\r\n        return data;\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  "],"mappings":";;;;gCAIQA,mBAAA,CAMQ,gB,aALNA,mBAAA,CAIK,a,aAHHA,mBAAA,CAAY,YAAR,KAAG,G,aACPA,mBAAA,CAAe,YAAX,QAAM,G,aACVA,mBAAA,CAAc,YAAV,OAAK,E;;;uBAPjBC,mBAAA,CAgBM,cAfJD,mBAAA,CAAgD;IAAzCE,IAAI,EAAC,MAAM;IAAEC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,gBAAA,IAAAD,QAAA,CAAAC,gBAAA,IAAAF,IAAA,CAAgB;qCAC/BG,KAAA,CAAAC,IAAI,I,cAAjBR,mBAAA,CAaQ,SAAAS,UAAA,GAZNC,UAMQ,EACRX,mBAAA,CAIQ,iB,kBAHNC,mBAAA,CAEKW,SAAA,QAAAC,WAAA,CAFyBL,KAAA,CAAAC,IAAI,GAAtBK,GAAG,EAAEC,QAAQ;yBAAzBd,mBAAA,CAEK;MAFgCe,GAAG,EAAED;IAAQ,K,kBAChDd,mBAAA,CAAyEW,SAAA,QAAAC,WAAA,CAAvCC,GAAG,GAAzBG,IAAI,EAAEC,WAAW;2BAA7BjB,mBAAA,CAAyE;QAAjCe,GAAG,EAAEE;MAAW,GAAAC,gBAAA,CAAKF,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}