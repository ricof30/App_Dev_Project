{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from '../views/HomeView.vue';\nimport Dashboard from '../views/Dashboard.vue';\nimport Register from '../views/Register.vue';\nimport Login from '../views/Login.vue';\nimport Upload from '../views/Upload.vue';\nimport Pending from '../views/Pending.vue';\nimport UserDashboard from '../views/user/UserDashboard.vue';\nimport Approved from '../views/Approved.vue';\nimport UserBUM from '../views/user/UserBUM.vue';\nimport UserValidator from '../views/user/UserValidator.vue';\nimport UserEncoder from '../views/user/UserEncoder.vue';\nimport Generate from '../views/user/Generate.vue';\nimport Chart from '../views/AdminChart.vue';\nimport BeneficiaryList from '../views/AdminList.vue';\nimport Deleted from '../views/AdminDeleted.vue';\nimport AdminLogin from '../components/admin/login.vue';\nimport Forgot from '../components/admin/forgot_password.vue';\nimport UpdatePassword from '../components/admin/update_password.vue';\nimport UserUpdateEncoder from '../views/user/UserUpdateEncoder.vue';\nimport AdminResetPass from '../components/Admin_ResetPass.vue';\nimport AdminUpdatePass from '../components/Admin_UpdatePass.vue';\nconst routes = [{\n  path: '/',\n  component: HomeView\n}, {\n  path: '/forgot',\n  component: Forgot\n}, {\n  path: '/updatePassword',\n  component: UpdatePassword\n}, {\n  path: '/resetPass',\n  component: AdminResetPass\n}, {\n  path: '/updatePass',\n  component: AdminUpdatePass\n}, {\n  path: '/chart',\n  component: Chart,\n  meta: {\n    adminAuth: true\n  }\n}, {\n  path: '/adminlogin',\n  component: AdminLogin\n}, {\n  path: '/encoderupdate/:entryId',\n  name: 'encoderUpdate',\n  component: UserUpdateEncoder,\n  props: true\n}, {\n  path: '/login',\n  component: Login\n}, {\n  path: '/register',\n  component: Register\n}, {\n  path: '/userdashboard',\n  component: UserDashboard,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/list',\n  component: BeneficiaryList\n}, {\n  path: '/recyclebin',\n  component: Deleted\n}, {\n  path: '/updating',\n  component: UserBUM,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/encoder',\n  component: UserEncoder,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/admindashboard',\n  component: Dashboard,\n  meta: {\n    adminAuth: true\n  }\n}, {\n  path: '/pending',\n  component: Pending,\n  meta: {\n    adminAuth: true\n  }\n}, {\n  path: '/approved',\n  component: Approved,\n  meta: {\n    adminAuth: true\n  }\n}, {\n  path: '/generate',\n  component: Generate,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/upload',\n  component: Upload,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/validate/:entryId',\n  name: 'validate',\n  component: UserValidator,\n  meta: {\n    requiresAuth: true\n  },\n  props: true\n}, {\n  path: '/about',\n  component: () => import('../views/AboutView.vue')\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nfunction isAuthenticated() {\n  // Check if the user is authenticated (e.g., check for the presence of a valid token)\n  return localStorage.getItem('token') !== null;\n}\nfunction isAuthenticate() {\n  // Check if the user is authenticated (e.g., check for the presence of a valid token)\n  return localStorage.getItem('admintoken') !== null;\n}\nrouter.beforeEach((to, from, next) => {\n  if (to.meta.requiresAuth && !isAuthenticated()) {\n    next('/login'); // Redirect to login if not authenticated\n  } else if (to.meta.adminAuth && !isAuthenticate()) {\n    next('/adminlogin'); // Redirect to login if not authenticated\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","HomeView","Dashboard","Register","Login","Upload","Pending","UserDashboard","Approved","UserBUM","UserValidator","UserEncoder","Generate","Chart","BeneficiaryList","Deleted","AdminLogin","Forgot","UpdatePassword","UserUpdateEncoder","AdminResetPass","AdminUpdatePass","routes","path","component","meta","adminAuth","name","props","requiresAuth","router","history","process","env","BASE_URL","isAuthenticated","localStorage","getItem","isAuthenticate","beforeEach","to","from","next"],"sources":["C:/laragon/www/frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\nimport HomeView from '../views/HomeView.vue'\nimport Dashboard from '../views/Dashboard.vue'\nimport Register from '../views/Register.vue'\nimport Login from '../views/Login.vue'\nimport Upload from '../views/Upload.vue'\nimport Pending from '../views/Pending.vue'\nimport UserDashboard from '../views/user/UserDashboard.vue'\nimport Approved from '../views/Approved.vue'\nimport UserBUM from '../views/user/UserBUM.vue'\nimport UserValidator from '../views/user/UserValidator.vue'\nimport UserEncoder from '../views/user/UserEncoder.vue'\nimport Generate from '../views/user/Generate.vue'\nimport Chart from '../views/AdminChart.vue'\nimport BeneficiaryList from '../views/AdminList.vue'\nimport Deleted from '../views/AdminDeleted.vue'\nimport AdminLogin from '../components/admin/login.vue'\nimport Forgot from '../components/admin/forgot_password.vue'\nimport UpdatePassword from '../components/admin/update_password.vue'\nimport UserUpdateEncoder from '../views/user/UserUpdateEncoder.vue'\nimport AdminResetPass from '../components/Admin_ResetPass.vue'\nimport AdminUpdatePass from '../components/Admin_UpdatePass.vue'\n\n\n\nconst routes = [\n  {\n    path: '/',\n    component: HomeView\n  },\n  {\n    path: '/forgot',\n    component: Forgot\n  },\n  {\n    path: '/updatePassword',\n    component: UpdatePassword \n  },\n  {\n    path: '/resetPass',\n    component: AdminResetPass \n  },\n  {\n    path: '/updatePass',\n    component: AdminUpdatePass \n  },\n  {\n    path: '/chart',\n    component: Chart,\n    meta: { adminAuth: true } \n  },\n  {\n    path: '/adminlogin',\n    component: AdminLogin\n  },\n  {\n    path: '/encoderupdate/:entryId',\n    name: 'encoderUpdate', \n    component: UserUpdateEncoder,\n    props: true, \n  },\n  {\n    path: '/login',\n    component: Login\n  },\n  {\n    path: '/register',\n    component: Register\n  },\n  {\n    path: '/userdashboard',\n    component: UserDashboard,\n    meta: { requiresAuth: true } \n  },\n  {\n    path: '/list',\n    component: BeneficiaryList\n  },\n  {\n    path: '/recyclebin',\n    component: Deleted\n  },\n  {\n    path: '/updating',\n    component: UserBUM,\n    meta: { requiresAuth: true } \n  },\n  {\n    path: '/encoder',\n    component: UserEncoder,\n    meta: { requiresAuth: true } \n  },\n  {\n    path: '/admindashboard',\n    component: Dashboard,\n    meta: { adminAuth: true } \n  },\n  {\n    path: '/pending',\n    component: Pending,\n    meta: { adminAuth: true } \n  },\n  {\n    path: '/approved',\n    component: Approved,\n    meta: { adminAuth: true } \n  },\n  {\n    path: '/generate',\n    component: Generate,\n       meta: { requiresAuth: true } \n  },\n  {\n    path: '/upload',\n    component: Upload,\n    meta: { requiresAuth: true } \n  },\n  {\n    path: '/validate/:entryId',\n    name: 'validate', \n    component: UserValidator,\n    meta: { requiresAuth: true } ,\n    props: true, \n  },\n  {\n    path: '/about',\n    component: () => import('../views/AboutView.vue')\n  }\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\nfunction isAuthenticated() {\n  // Check if the user is authenticated (e.g., check for the presence of a valid token)\n  return localStorage.getItem('token') !== null;\n}\n\nfunction isAuthenticate() {\n  // Check if the user is authenticated (e.g., check for the presence of a valid token)\n  return localStorage.getItem('admintoken') !== null;\n}\n\nrouter.beforeEach((to, from, next) => {\n  if (to.meta.requiresAuth && !isAuthenticated()) {\n    next('/login'); // Redirect to login if not authenticated\n  } else if (to.meta.adminAuth && !isAuthenticate()) {\n    next('/adminlogin'); // Redirect to login if not authenticated\n  } else {\n    next();\n  }\n\n});\n\n\n\nexport default router\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}